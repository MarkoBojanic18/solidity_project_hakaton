// SPDX-License-Identifier: MIT
pragma solidity ^0.8.4;

contract MedicalRecord{
    uint256 private id; // unique identification number of medical record
    string private typeOfRecord; //da li je operacija, alergija, hronicna bolest, povreda
    string private description; //doktorova zapazanja
    address private doctorSignature; //adresa doktora koji je napravio record
    string private date_time_of_record; //datum kada je napravljen record
    string private recipe; // recept
    address private patient; // address of patiente
    address private doctorWhoCanSeeRecipe; //person in pharmacy who can see patiente's recipe
    

    constructor(uint _id, string memory typeOfRec, string memory desc, address docSignature, address _patient,string memory _date_time_of_record,string memory _recipe){
        id = _id;
        typeOfRecord = typeOfRec;
        description = desc;
        doctorSignature = docSignature;
        date_time_of_record = _date_time_of_record;
        patient = _patient;
        recipe = _recipe;
    }

        function getID() public view returns(uint256){
        return id;
        }

        function getTypeOfRecord() public view returns(string memory){
            return typeOfRecord;
        }

        function setTypeOfRecord(string memory tyOR) public {
            typeOfRecord = tyOR;
        }

        function getDescription() public view returns(string memory){
            return description;
        }

        function setDescription(string memory desc) public {
            description = desc;
        }

        function getDoctorSignature() public view returns(address){
            return doctorSignature;
        }

        function setDoctorSignature(address docSig) public {
            doctorSignature = docSig;
        }

        function getDateTimeOfRecord() public view returns(string memory){
            return date_time_of_record;
        }

        function setReceipe(string memory _recipe) public {
            recipe = _recipe;
        }

        function getRecipe() public view returns(string memory){
            return recipe;
        }

        

         function getPatient() public view returns(address){
            return patient;
        }

        function setPatient(address addressPatient) public {
            patient = addressPatient;
        }


        function getDoctorWhoCanSeeRecipe() public view returns(address){
            return doctorWhoCanSeeRecipe;
        }

        function setDoctorWhoCanSeeRecipe(address _doctorWhoCanSeeRecipe) public {
            doctorWhoCanSeeRecipe = _doctorWhoCanSeeRecipe;
        }

       
}
